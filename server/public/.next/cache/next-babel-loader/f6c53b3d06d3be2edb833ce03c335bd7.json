{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import { push } from 'react-router-redux';\nimport Router from 'next/router';\nimport api from '../shared/api/index';\nimport { SET_STATUS_TEXT, SET_REGISTER_LOADING_STATUS, SET_AUTH_LOADING_STATUS, SET_TOKEN, AUTH_LOGIN_USER_SUCCESS, AUTH_LOGIN_USER_FAILURE, REGISTER_USER_SUCCESS, CHECK_AUTH_FAILURE, CHECK_AUTH_SUCCESS, LOGOUT } from '../shared/constants/auth';\nexport var setStatusText = function setStatusText(text) {\n  return {\n    type: SET_STATUS_TEXT,\n    payload: text\n  };\n};\nexport var logout = function logout() {\n  localStorage.removeItem('token');\n  return {\n    type: LOGOUT\n  };\n};\nexport var setRegisteringLoader = function setRegisteringLoader(status) {\n  return {\n    type: SET_REGISTER_LOADING_STATUS,\n    payload: status\n  };\n};\nexport var getCurrentUser = function getCurrentUser() {\n  return api.auth.currentUser().then(function (res) {\n    console.log('res', res);\n  })[\"catch\"](function (e) {\n    console.error('error getCurrenUser', _objectSpread({}, e));\n  });\n};\nexport var checkAuthSuccess = function checkAuthSuccess() {\n  return {\n    type: CHECK_AUTH_SUCCESS\n  };\n};\nexport var checkAuthFailure = function checkAuthFailure() {\n  return {\n    type: CHECK_AUTH_FAILURE\n  };\n};\nexport var checkAuth = function checkAuth() {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n    return api.auth.currentUser() // check that token is verificate\n    .then(function (res) {\n      //\n      dispatch(checkAuthSuccess());\n    })[\"catch\"](function (e) {\n      // to login page\n      console.error('Auth error', _objectSpread({}, e));\n      dispatch(checkAuthFailure());\n    });\n  };\n};\nexport var authLoginUserSuccess = function authLoginUserSuccess(token) {\n  localStorage.setItem('token', token);\n  return {\n    type: AUTH_LOGIN_USER_SUCCESS,\n    payload: token\n  };\n};\nexport var authLoginUserFailure = function authLoginUserFailure(status, text) {\n  localStorage.removeItem('token');\n  return {\n    type: AUTH_LOGIN_USER_FAILURE,\n    payload: {\n      status: status,\n      text: text\n    }\n  };\n};\nexport var setAuthLoader = function setAuthLoader(status) {\n  return {\n    type: SET_AUTH_LOADING_STATUS,\n    payload: status\n  };\n};\nexport var registerUserSuccess = function registerUserSuccess() {\n  return {\n    type: REGISTER_USER_SUCCESS\n  };\n};\nexport var registerUser = function registerUser(values) {\n  return function (dispatch) {\n    dispatch(setRegisteringLoader(true));\n    return api.auth.register(values).then(function (res) {\n      // dispatch(setRegisteringLoader(false))\n      // dispatch(setStatusText({\n      //     statusText: 'Register is success',\n      //     statusType: 'success'\n      // }))\n      dispatch(registerUserSuccess());\n      return true;\n    });\n  };\n};\nexport var loginUser = function loginUser(values) {\n  return function (dispatch) {\n    dispatch(setAuthLoader(true));\n    return api.auth.login(values).then(function (res) {\n      dispatch(authLoginUserSuccess(res.token)); // dispatch(push('/admin'));\n\n      Router.push('/admin');\n    })[\"catch\"](function (e) {\n      dispatch(authLoginUserFailure('error', 'Failed login'));\n    });\n  };\n};","map":{"version":3,"sources":["/usr/src/app/server/public/actions/auth.js"],"names":["Router","api","SET_STATUS_TEXT","SET_REGISTER_LOADING_STATUS","SET_AUTH_LOADING_STATUS","SET_TOKEN","AUTH_LOGIN_USER_SUCCESS","AUTH_LOGIN_USER_FAILURE","REGISTER_USER_SUCCESS","CHECK_AUTH_FAILURE","CHECK_AUTH_SUCCESS","LOGOUT","setStatusText","text","type","payload","logout","localStorage","removeItem","setRegisteringLoader","status","getCurrentUser","auth","currentUser","then","res","console","log","e","error","checkAuthSuccess","checkAuthFailure","checkAuth","dispatch","token","getItem","authLoginUserSuccess","setItem","authLoginUserFailure","setAuthLoader","registerUserSuccess","registerUser","values","register","loginUser","login","push"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAEA,SACEC,eADF,EAEEC,2BAFF,EAGEC,uBAHF,EAIEC,SAJF,EAKEC,uBALF,EAMEC,uBANF,EAOEC,qBAPF,EAQEC,kBARF,EASEC,kBATF,EAUEC,MAVF,QAWO,0BAXP;AAaA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAK;AACpCC,IAAAA,IAAI,EAAEZ,eAD8B;AAEpCa,IAAAA,OAAO,EAAEF;AAF2B,GAAL;AAAA,CAA1B;AAKP,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1BC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,SAAO;AACLJ,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CALM;AAOP,OAAO,IAAMQ,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,MAAM;AAAA,SAAK;AAC7CN,IAAAA,IAAI,EAAEX,2BADuC;AAE7CY,IAAAA,OAAO,EAAEK;AAFoC,GAAL;AAAA,CAAnC;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMpB,GAAG,CAACqB,IAAJ,CAASC,WAAT,GACjCC,IADiC,CAC5B,UAACC,GAAD,EAAS;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACD,GAHiC,WAI3B,UAACG,CAAD,EAAO;AACZF,IAAAA,OAAO,CAACG,KAAR,CAAc,qBAAd,oBAA0CD,CAA1C;AACD,GANiC,CAAN;AAAA,CAAvB;AAQP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AACrChB,IAAAA,IAAI,EAAEJ;AAD+B,GAAP;AAAA,CAAzB;AAIP,OAAO,IAAMqB,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AACrCjB,IAAAA,IAAI,EAAEL;AAD+B,GAAP;AAAA,CAAzB;AAIP,OAAO,IAAMuB,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAM,UAACC,QAAD,EAAc;AAC3C,QAAMC,KAAK,GAAGjB,YAAY,CAACkB,OAAb,CAAqB,OAArB,CAAd;AAEA,WAAOlC,GAAG,CAACqB,IAAJ,CAASC,WAAT,GAAuB;AAAvB,KACJC,IADI,CACC,UAACC,GAAD,EAAS;AAAE;AACfQ,MAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACD,KAHI,WAIE,UAACF,CAAD,EAAO;AAAE;AACdF,MAAAA,OAAO,CAACG,KAAR,CAAc,YAAd,oBAAiCD,CAAjC;AACAK,MAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACD,KAPI,CAAP;AAQD,GAXwB;AAAA,CAAlB;AAaP,OAAO,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACF,KAAD,EAAW;AAC7CjB,EAAAA,YAAY,CAACoB,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACA,SAAO;AACLpB,IAAAA,IAAI,EAAER,uBADD;AAELS,IAAAA,OAAO,EAAEmB;AAFJ,GAAP;AAID,CANM;AAQP,OAAO,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAClB,MAAD,EAASP,IAAT,EAAkB;AACpDI,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,SAAO;AACLJ,IAAAA,IAAI,EAAEP,uBADD;AAELQ,IAAAA,OAAO,EAAE;AACPK,MAAAA,MAAM,EAANA,MADO;AAEPP,MAAAA,IAAI,EAAJA;AAFO;AAFJ,GAAP;AAOD,CATM;AAWP,OAAO,IAAM0B,aAAa,GAAG,SAAhBA,aAAgB,CAAAnB,MAAM;AAAA,SAAK;AACtCN,IAAAA,IAAI,EAAEV,uBADgC;AAEtCW,IAAAA,OAAO,EAAEK;AAF6B,GAAL;AAAA,CAA5B;AAKP,OAAO,IAAMoB,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAO;AACxC1B,IAAAA,IAAI,EAAEN;AADkC,GAAP;AAAA,CAA5B;AAIP,OAAO,IAAMiC,YAAY,GAAG,SAAfA,YAAe,CAAAC,MAAM;AAAA,SAAI,UAACT,QAAD,EAAc;AAClDA,IAAAA,QAAQ,CAACd,oBAAoB,CAAC,IAAD,CAArB,CAAR;AACA,WAAOlB,GAAG,CAACqB,IAAJ,CAASqB,QAAT,CAAkBD,MAAlB,EACJlB,IADI,CACC,UAACC,GAAD,EAAS;AACb;AACA;AACA;AACA;AACA;AACAQ,MAAAA,QAAQ,CAACO,mBAAmB,EAApB,CAAR;AACA,aAAO,IAAP;AACD,KATI,CAAP;AAUD,GAZiC;AAAA,CAA3B;AAcP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAAAF,MAAM;AAAA,SAAI,UAACT,QAAD,EAAc;AAC/CA,IAAAA,QAAQ,CAACM,aAAa,CAAC,IAAD,CAAd,CAAR;AACA,WAAOtC,GAAG,CAACqB,IAAJ,CAASuB,KAAT,CAAeH,MAAf,EACJlB,IADI,CACC,UAACC,GAAD,EAAS;AACbQ,MAAAA,QAAQ,CAACG,oBAAoB,CAACX,GAAG,CAACS,KAAL,CAArB,CAAR,CADa,CAEb;;AACAlC,MAAAA,MAAM,CAAC8C,IAAP,CAAY,QAAZ;AACD,KALI,WAME,UAAClB,CAAD,EAAO;AACZK,MAAAA,QAAQ,CAACK,oBAAoB,CAAC,OAAD,EAAU,cAAV,CAArB,CAAR;AACD,KARI,CAAP;AASD,GAX8B;AAAA,CAAxB","sourcesContent":["// import { push } from 'react-router-redux';\nimport Router from 'next/router';\nimport api from '../shared/api/index';\n\nimport {\n  SET_STATUS_TEXT,\n  SET_REGISTER_LOADING_STATUS,\n  SET_AUTH_LOADING_STATUS,\n  SET_TOKEN,\n  AUTH_LOGIN_USER_SUCCESS,\n  AUTH_LOGIN_USER_FAILURE,\n  REGISTER_USER_SUCCESS,\n  CHECK_AUTH_FAILURE,\n  CHECK_AUTH_SUCCESS,\n  LOGOUT,\n} from '../shared/constants/auth';\n\nexport const setStatusText = text => ({\n  type: SET_STATUS_TEXT,\n  payload: text,\n});\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  return {\n    type: LOGOUT,\n  };\n};\n\nexport const setRegisteringLoader = status => ({\n  type: SET_REGISTER_LOADING_STATUS,\n  payload: status,\n});\n\nexport const getCurrentUser = () => api.auth.currentUser()\n  .then((res) => {\n    console.log('res', res);\n  })\n  .catch((e) => {\n    console.error('error getCurrenUser', { ...e });\n  });\n\nexport const checkAuthSuccess = () => ({\n  type: CHECK_AUTH_SUCCESS,\n});\n\nexport const checkAuthFailure = () => ({\n  type: CHECK_AUTH_FAILURE,\n});\n\nexport const checkAuth = () => (dispatch) => {\n  const token = localStorage.getItem('token');\n\n  return api.auth.currentUser() // check that token is verificate\n    .then((res) => { //\n      dispatch(checkAuthSuccess());\n    })\n    .catch((e) => { // to login page\n      console.error('Auth error', { ...e });\n      dispatch(checkAuthFailure());\n    });\n};\n\nexport const authLoginUserSuccess = (token) => {\n  localStorage.setItem('token', token);\n  return {\n    type: AUTH_LOGIN_USER_SUCCESS,\n    payload: token,\n  };\n};\n\nexport const authLoginUserFailure = (status, text) => {\n  localStorage.removeItem('token');\n  return {\n    type: AUTH_LOGIN_USER_FAILURE,\n    payload: {\n      status,\n      text,\n    },\n  };\n};\n\nexport const setAuthLoader = status => ({\n  type: SET_AUTH_LOADING_STATUS,\n  payload: status,\n});\n\nexport const registerUserSuccess = () => ({\n  type: REGISTER_USER_SUCCESS,\n});\n\nexport const registerUser = values => (dispatch) => {\n  dispatch(setRegisteringLoader(true));\n  return api.auth.register(values)\n    .then((res) => {\n      // dispatch(setRegisteringLoader(false))\n      // dispatch(setStatusText({\n      //     statusText: 'Register is success',\n      //     statusType: 'success'\n      // }))\n      dispatch(registerUserSuccess());\n      return true;\n    });\n};\n\nexport const loginUser = values => (dispatch) => {\n  dispatch(setAuthLoader(true));\n  return api.auth.login(values)\n    .then((res) => {\n      dispatch(authLoginUserSuccess(res.token));\n      // dispatch(push('/admin'));\n      Router.push('/admin');\n    })\n    .catch((e) => {\n      dispatch(authLoginUserFailure('error', 'Failed login'));\n    });\n};\n"]},"metadata":{},"sourceType":"module"}