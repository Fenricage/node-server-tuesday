{"ast":null,"code":"import { fromJS } from 'immutable';\nimport { USERS_FETCH_FAILURE, USERS_FETCH_SUCCESS, USERS_INIT, USERS_DELETE_USER_SUCCESS, USERS_DELETE_USER_FAILURE, USERS_DELETE_USER } from '../shared/constants/users';\nconst initialState = fromJS({\n  data: [],\n  error: null,\n  isDeleting: [],\n  isLoaded: false\n});\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case USERS_INIT:\n      return initialState;\n\n    case USERS_FETCH_SUCCESS:\n      return state.merge({\n        data: action.payload,\n        isLoaded: true\n      });\n\n    case USERS_FETCH_FAILURE:\n      return state.merge({\n        error: action.payload,\n        isLoaded: true\n      });\n\n    case USERS_DELETE_USER:\n      return state.set('isDeleting', action.payload);\n\n    case USERS_DELETE_USER_SUCCESS:\n      return state.merge({\n        isDeleting: action.payload.isDeleting,\n        data: action.payload.updatedUsers\n      });\n\n    case USERS_DELETE_USER_FAILURE:\n      return state.merge({\n        error: action.payload.e,\n        isDeleting: action.payload.isDeleting\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/usr/src/app/server/public/reducers/users.js"],"names":["fromJS","USERS_FETCH_FAILURE","USERS_FETCH_SUCCESS","USERS_INIT","USERS_DELETE_USER_SUCCESS","USERS_DELETE_USER_FAILURE","USERS_DELETE_USER","initialState","data","error","isDeleting","isLoaded","state","action","type","merge","payload","set","updatedUsers","e"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,UAHF,EAIEC,yBAJF,EAKEC,yBALF,EAMEC,iBANF,QAOO,2BAPP;AASA,MAAMC,YAAY,GAAGP,MAAM,CAAC;AAC1BQ,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,KAAK,EAAE,IAFmB;AAG1BC,EAAAA,UAAU,EAAE,EAHc;AAI1BC,EAAAA,QAAQ,EAAE;AAJgB,CAAD,CAA3B;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,UAAL;AACE,aAAOI,YAAP;;AACF,SAAKL,mBAAL;AACE,aAAOU,KAAK,CAACG,KAAN,CAAY;AACjBP,QAAAA,IAAI,EAAEK,MAAM,CAACG,OADI;AAEjBL,QAAAA,QAAQ,EAAE;AAFO,OAAZ,CAAP;;AAIF,SAAKV,mBAAL;AACE,aAAOW,KAAK,CAACG,KAAN,CAAY;AACjBN,QAAAA,KAAK,EAAEI,MAAM,CAACG,OADG;AAEjBL,QAAAA,QAAQ,EAAE;AAFO,OAAZ,CAAP;;AAIF,SAAKL,iBAAL;AACE,aAAOM,KAAK,CAACK,GAAN,CAAU,YAAV,EAAwBJ,MAAM,CAACG,OAA/B,CAAP;;AACF,SAAKZ,yBAAL;AACE,aAAOQ,KAAK,CAACG,KAAN,CAAY;AACjBL,QAAAA,UAAU,EAAEG,MAAM,CAACG,OAAP,CAAeN,UADV;AAEjBF,QAAAA,IAAI,EAAEK,MAAM,CAACG,OAAP,CAAeE;AAFJ,OAAZ,CAAP;;AAIF,SAAKb,yBAAL;AACE,aAAOO,KAAK,CAACG,KAAN,CAAY;AACjBN,QAAAA,KAAK,EAAEI,MAAM,CAACG,OAAP,CAAeG,CADL;AAEjBT,QAAAA,UAAU,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAFV,OAAZ,CAAP;;AAIF;AACE,aAAOE,KAAP;AA1BJ;AA4BD,CA7BD","sourcesContent":["import { fromJS } from 'immutable';\nimport {\n  USERS_FETCH_FAILURE,\n  USERS_FETCH_SUCCESS,\n  USERS_INIT,\n  USERS_DELETE_USER_SUCCESS,\n  USERS_DELETE_USER_FAILURE,\n  USERS_DELETE_USER,\n} from '../shared/constants/users';\n\nconst initialState = fromJS({\n  data: [],\n  error: null,\n  isDeleting: [],\n  isLoaded: false,\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case USERS_INIT:\n      return initialState;\n    case USERS_FETCH_SUCCESS:\n      return state.merge({\n        data: action.payload,\n        isLoaded: true,\n      });\n    case USERS_FETCH_FAILURE:\n      return state.merge({\n        error: action.payload,\n        isLoaded: true,\n      });\n    case USERS_DELETE_USER:\n      return state.set('isDeleting', action.payload);\n    case USERS_DELETE_USER_SUCCESS:\n      return state.merge({\n        isDeleting: action.payload.isDeleting,\n        data: action.payload.updatedUsers,\n      });\n    case USERS_DELETE_USER_FAILURE:\n      return state.merge({\n        error: action.payload.e,\n        isDeleting: action.payload.isDeleting,\n      });\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}