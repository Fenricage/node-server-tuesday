{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { setStatusText, loginUser } from '../../../../actions/auth';\n\nconst login = async (values, dispatch) => {\n  try {\n    dispatch(loginUser(values));\n  } catch (e) {\n    console.error('Login is failed', _objectSpread({}, e));\n  }\n};\n\nexport default login;","map":{"version":3,"sources":["/usr/src/app/server/public/components/auth/SignIn/dispatchControllers/login.js"],"names":["setStatusText","loginUser","login","values","dispatch","e","console","error"],"mappings":";;;;;;;;;;;;AAAA,SACEA,aADF,EAEEC,SAFF,QAGO,0BAHP;;AAMA,MAAMC,KAAK,GAAG,OAAOC,MAAP,EAAeC,QAAf,KAA4B;AACxC,MAAI;AACFA,IAAAA,QAAQ,CAACH,SAAS,CAACE,MAAD,CAAV,CAAR;AACD,GAFD,CAEE,OAAOE,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAc,iBAAd,oBAAsCF,CAAtC;AACD;AACF,CAND;;AAQA,eAAeH,KAAf","sourcesContent":["import {\n  setStatusText,\n  loginUser,\n} from '../../../../actions/auth';\n\n\nconst login = async (values, dispatch) => {\n  try {\n    dispatch(loginUser(values));\n  } catch (e) {\n    console.error('Login is failed', { ...e });\n  }\n};\n\nexport default login;\n"]},"metadata":{},"sourceType":"module"}