{"ast":null,"code":"import { fromJS } from 'immutable';\nimport { ARTICLE_CATEGORIES_GET_ALL_SUCCESS, ARTICLE_CATEGORIES_GET_ALL_FAILURE, ARTICLE_CATEGORIES_GET_ALL_FETCH, ARTICLE_CATEGORIES_DELETE_ARTICLE_SUCCESS, ARTICLE_CATEGORIES_DELETE_ARTICLE_FAILURE, ARTICLE_CATEGORIES_DELETE_ARTICLE } from '../shared/constants/articleCategories';\nvar initialState = fromJS({\n  data: [],\n  error: null,\n  isDeleting: [],\n  isLoaded: false\n});\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ARTICLE_CATEGORIES_GET_ALL_FETCH:\n      return initialState;\n\n    case ARTICLE_CATEGORIES_GET_ALL_SUCCESS:\n      return state.merge({\n        data: action.payload,\n        isLoaded: true\n      });\n\n    case ARTICLE_CATEGORIES_GET_ALL_FAILURE:\n      return state.merge({\n        error: action.payload,\n        isLoaded: true\n      });\n\n    case ARTICLE_CATEGORIES_DELETE_ARTICLE:\n      return state.set('isDeleting', action.payload);\n\n    case ARTICLE_CATEGORIES_DELETE_ARTICLE_SUCCESS:\n      return state.merge({\n        isDeleting: action.payload.isDeleting,\n        data: action.payload.updatedArticleCategories\n      });\n\n    case ARTICLE_CATEGORIES_DELETE_ARTICLE_FAILURE:\n      return state.merge({\n        error: action.payload.e,\n        isDeleting: action.payload.isDeleting\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/usr/src/app/server/public/reducers/articleCategories.js"],"names":["fromJS","ARTICLE_CATEGORIES_GET_ALL_SUCCESS","ARTICLE_CATEGORIES_GET_ALL_FAILURE","ARTICLE_CATEGORIES_GET_ALL_FETCH","ARTICLE_CATEGORIES_DELETE_ARTICLE_SUCCESS","ARTICLE_CATEGORIES_DELETE_ARTICLE_FAILURE","ARTICLE_CATEGORIES_DELETE_ARTICLE","initialState","data","error","isDeleting","isLoaded","state","action","type","merge","payload","set","updatedArticleCategories","e"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,SACEC,kCADF,EAEEC,kCAFF,EAGEC,gCAHF,EAIEC,yCAJF,EAKEC,yCALF,EAMEC,iCANF,QAOO,uCAPP;AASA,IAAMC,YAAY,GAAGP,MAAM,CAAC;AAC1BQ,EAAAA,IAAI,EAAE,EADoB;AAE1BC,EAAAA,KAAK,EAAE,IAFmB;AAG1BC,EAAAA,UAAU,EAAE,EAHc;AAI1BC,EAAAA,QAAQ,EAAE;AAJgB,CAAD,CAA3B;AAOA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,gCAAL;AACE,aAAOI,YAAP;;AAEF,SAAKN,kCAAL;AACE,aAAOW,KAAK,CAACG,KAAN,CAAY;AACjBP,QAAAA,IAAI,EAAEK,MAAM,CAACG,OADI;AAEjBL,QAAAA,QAAQ,EAAE;AAFO,OAAZ,CAAP;;AAIF,SAAKT,kCAAL;AACE,aAAOU,KAAK,CAACG,KAAN,CAAY;AACjBN,QAAAA,KAAK,EAAEI,MAAM,CAACG,OADG;AAEjBL,QAAAA,QAAQ,EAAE;AAFO,OAAZ,CAAP;;AAIF,SAAKL,iCAAL;AACE,aAAOM,KAAK,CAACK,GAAN,CAAU,YAAV,EAAwBJ,MAAM,CAACG,OAA/B,CAAP;;AACF,SAAKZ,yCAAL;AACE,aAAOQ,KAAK,CAACG,KAAN,CAAY;AACjBL,QAAAA,UAAU,EAAEG,MAAM,CAACG,OAAP,CAAeN,UADV;AAEjBF,QAAAA,IAAI,EAAEK,MAAM,CAACG,OAAP,CAAeE;AAFJ,OAAZ,CAAP;;AAIF,SAAKb,yCAAL;AACE,aAAOO,KAAK,CAACG,KAAN,CAAY;AACjBN,QAAAA,KAAK,EAAEI,MAAM,CAACG,OAAP,CAAeG,CADL;AAEjBT,QAAAA,UAAU,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAFV,OAAZ,CAAP;;AAIF;AACE,aAAOE,KAAP;AA3BJ;AA6BD,CA9BD","sourcesContent":["import { fromJS } from 'immutable';\nimport {\n  ARTICLE_CATEGORIES_GET_ALL_SUCCESS,\n  ARTICLE_CATEGORIES_GET_ALL_FAILURE,\n  ARTICLE_CATEGORIES_GET_ALL_FETCH,\n  ARTICLE_CATEGORIES_DELETE_ARTICLE_SUCCESS,\n  ARTICLE_CATEGORIES_DELETE_ARTICLE_FAILURE,\n  ARTICLE_CATEGORIES_DELETE_ARTICLE,\n} from '../shared/constants/articleCategories';\n\nconst initialState = fromJS({\n  data: [],\n  error: null,\n  isDeleting: [],\n  isLoaded: false,\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ARTICLE_CATEGORIES_GET_ALL_FETCH:\n      return initialState;\n\n    case ARTICLE_CATEGORIES_GET_ALL_SUCCESS:\n      return state.merge({\n        data: action.payload,\n        isLoaded: true,\n      });\n    case ARTICLE_CATEGORIES_GET_ALL_FAILURE:\n      return state.merge({\n        error: action.payload,\n        isLoaded: true,\n      });\n    case ARTICLE_CATEGORIES_DELETE_ARTICLE:\n      return state.set('isDeleting', action.payload);\n    case ARTICLE_CATEGORIES_DELETE_ARTICLE_SUCCESS:\n      return state.merge({\n        isDeleting: action.payload.isDeleting,\n        data: action.payload.updatedArticleCategories,\n      });\n    case ARTICLE_CATEGORIES_DELETE_ARTICLE_FAILURE:\n      return state.merge({\n        error: action.payload.e,\n        isDeleting: action.payload.isDeleting,\n      });\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}