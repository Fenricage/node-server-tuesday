{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/server/public/components/auth/SignIn/SignIn.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form/immutable';\nimport './SignIn.scss';\nimport Link from 'next/link';\nimport Input from '../../../shared/components/Input/Input';\nimport Button from '../../../shared/components/Button/Button';\nimport login from './dispatchControllers/login';\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      pristine,\n      submitting,\n      valid,\n      invalid,\n      isAuthenticating,\n      statusAuth: {\n        statusText,\n        statusType\n      }\n    } = this.props;\n    return __jsx(\"section\", {\n      className: \"b-signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Sign in\"), statusText ? __jsx(\"p\", {\n      className: statusType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, statusText) : null, __jsx(\"form\", {\n      onSubmit: handleSubmit(login),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(Field, {\n      placeholder: \"Enter your login e-mail\",\n      autofocus: true,\n      title: \"E-mail\",\n      name: \"email\",\n      component: Input,\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), __jsx(Field, {\n      placeholder: \"Enter your password\",\n      title: \"Password\",\n      name: \"password\",\n      component: Input,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), __jsx(\"section\", {\n      className: \"b-signin__box-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(Button, {\n      type: \"submit\",\n      className: \"btn\",\n      isLoading: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Log in\")), __jsx(\"section\", {\n      className: \"b-signin__switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/auth/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Switch To Sign up\")))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  statusAuth: state.getIn(['auth', 'statusAuth']),\n  isAuthenticating: state.getIn(['auth', 'isAuthenticating'])\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nconst SignIn = connect(mapStateToProps, mapDispatchToProps)(SignInForm);\nconst formConfiguration = {\n  form: 'signin-form'\n};\nexport default reduxForm(formConfiguration)(SignIn);","map":{"version":3,"sources":["/usr/src/app/server/public/components/auth/SignIn/SignIn.jsx"],"names":["React","Component","connect","reduxForm","Field","Link","Input","Button","login","SignInForm","constructor","props","state","render","handleSubmit","pristine","submitting","valid","invalid","isAuthenticating","statusAuth","statusText","statusType","mapStateToProps","ownProps","getIn","mapDispatchToProps","dispatch","SignIn","formConfiguration","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form/immutable';\nimport './SignIn.scss';\nimport Link from 'next/link';\nimport Input from '../../../shared/components/Input/Input';\nimport Button from '../../../shared/components/Button/Button';\nimport login from './dispatchControllers/login';\n\n\nclass SignInForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n\n    const {\n      handleSubmit,\n      pristine,\n      submitting,\n      valid,\n      invalid,\n      isAuthenticating,\n      statusAuth: {\n        statusText,\n        statusType,\n      },\n    } = this.props;\n\n    return (\n      <section className=\"b-signin\">\n        <h2>Sign in</h2>\n        {statusText ? (\n          <p className={statusType}>{statusText}</p>\n        ) : null}\n        <form onSubmit={handleSubmit(login)}>\n          <Field\n            placeholder=\"Enter your login e-mail\"\n            autofocus\n            title=\"E-mail\"\n            name=\"email\"\n            component={Input}\n            type=\"email\"\n          />\n          <Field\n            placeholder=\"Enter your password\"\n            title=\"Password\"\n            name=\"password\"\n            component={Input}\n            type=\"password\"\n          />\n          <section className=\"b-signin__box-button\">\n            <Button\n              type=\"submit\"\n              className=\"btn\"\n              isLoading={false}\n            >\n              Log in\n            </Button>\n          </section>\n          <section className=\"b-signin__switch\">\n            <Link href=\"/auth/register\">\n              <a>Switch To Sign up</a>\n            </Link>\n          </section>\n        </form>\n      </section>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  statusAuth: state.getIn(['auth', 'statusAuth']),\n  isAuthenticating: state.getIn(['auth', 'isAuthenticating']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\n\nconst SignIn = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignInForm);\n\nconst formConfiguration = {\n  form: 'signin-form',\n};\n\nexport default reduxForm(formConfiguration)(SignIn);\n"]},"metadata":{},"sourceType":"module"}